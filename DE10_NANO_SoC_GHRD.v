
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module DE10_NANO_SoC_GHRD (

    //////////// CLOCK //////////
    input FPGA_CLK1_50,
    input FPGA_CLK2_50,
    input FPGA_CLK3_50,

    //////////// HPS //////////
    output [14:0] HPS_DDR3_ADDR,
    output [ 2:0] HPS_DDR3_BA,
    output        HPS_DDR3_CAS_N,
    output        HPS_DDR3_CK_N,
    output        HPS_DDR3_CK_P,
    output        HPS_DDR3_CKE,
    output        HPS_DDR3_CS_N,
    output [ 3:0] HPS_DDR3_DM,
    inout  [31:0] HPS_DDR3_DQ,
    inout  [ 3:0] HPS_DDR3_DQS_N,
    inout  [ 3:0] HPS_DDR3_DQS_P,
    output        HPS_DDR3_ODT,
    output        HPS_DDR3_RAS_N,
    output        HPS_DDR3_RESET_N,
    input         HPS_DDR3_RZQ,
    output        HPS_DDR3_WE_N,

    //////////// KEY //////////
    input [1:0] KEY,

    //////////// LED //////////
    output [7:0] LED,

    //////////// SW //////////
    input [3:0] SW,

    //Pulse Generator
    output pulse_out
);



  //=======================================================
  //  REG/WIRE declarations
  //=======================================================
  wire hps_fpga_reset_n;
  wire fpga_clk_pll_100;
  wire pll_locked;
  wire pulse_start_pio_export;
  wire [31:0] pulse_delay_pio_export;
  wire [31:0] pulse_width_pio_export;
  wire [15:0] pulse_repetition_pio_export;
  wire pulse_out_camera, pulse_out_strobe;

  //=======================================================
  //  Structural coding*
  //=======================================================
  pulse_generator_pio laser_pulse (
      .clk(fpga_clk_pll_100),
      .reset_n(hps_fpga_reset_n),
      .start_pio(pulse_start_pio_export),
      .delay_cycles(pulse_delay_pio_export),
      .pulse_width_cycles(pulse_width_pio_export),
      .repetition(16'd0),
      .pulse_out(pulse_out),
      .pulse_led(LED[1]),
      .delay_led(LED[0])
  );

  pulse_generator_pio camera_pulse (
      .clk(fpga_clk_pll_100),
      .reset_n(hps_fpga_reset_n),
      .start_pio(pulse_start_pio_export),
      .delay_cycles(pulse_delay_pio_export),
      .pulse_width_cycles(pulse_width_pio_export),
      .repetition(pulse_repetition_pio_export),
      .pulse_out(pulse_out_camera),
      .pulse_led(LED[3]),
      .delay_led(LED[2])
  );

  pulse_generator_pio strobe_pulse (
      .clk(fpga_clk_pll_100),
      .reset_n(hps_fpga_reset_n),
      .start_pio(pulse_start_pio_export),
      .delay_cycles(pulse_delay_pio_export),
      .pulse_width_cycles(pulse_width_pio_export),
      .repetition(pulse_repetition_pio_export),
      .pulse_out(pulse_out_strobe),
      .pulse_led(LED[5]),
      .delay_led(LED[4])
  );

  soc_system u0 (
      //Clock&Reset
      .clk_clk(fpga_clk_pll_100),  //                            clk.clk
      .fpga_clk_pll_100_clk(fpga_clk_pll_100),  //               fpga_clk_pll_100.clk
      .hps_0_h2f_reset_reset_n(hps_fpga_reset_n),  //                hps_0_h2f_reset.reset_n
      //HPS ddr3
      .memory_mem_a(HPS_DDR3_ADDR),  //                         memory.mem_a
      .memory_mem_ba(HPS_DDR3_BA),  //                               .mem_ba
      .memory_mem_ck(HPS_DDR3_CK_P),  //                               .mem_ck
      .memory_mem_ck_n(HPS_DDR3_CK_N),  //                               .mem_ck_n
      .memory_mem_cke(HPS_DDR3_CKE),  //                               .mem_cke
      .memory_mem_cs_n(HPS_DDR3_CS_N),  //                               .mem_cs_n
      .memory_mem_ras_n(HPS_DDR3_RAS_N),  //                               .mem_ras_n
      .memory_mem_cas_n(HPS_DDR3_CAS_N),  //                               .mem_cas_n
      .memory_mem_we_n(HPS_DDR3_WE_N),  //                               .mem_we_n
      .memory_mem_reset_n(HPS_DDR3_RESET_N),  //                               .mem_reset_n
      .memory_mem_dq(HPS_DDR3_DQ),  //                               .mem_dq
      .memory_mem_dqs(HPS_DDR3_DQS_P),  //                               .mem_dqs
      .memory_mem_dqs_n(HPS_DDR3_DQS_N),  //                               .mem_dqs_n
      .memory_mem_odt(HPS_DDR3_ODT),  //                               .mem_odt
      .memory_mem_dm(HPS_DDR3_DM),  //                               .mem_dm
      .memory_oct_rzqin(HPS_DDR3_RZQ),  //                               .oct_rzqin
      // PLL
      .pll_0_locked_export(pll_locked),  //               pll_0_locked.export
      .pll_0_refclk_clk(FPGA_CLK1_50),  //               pll_0_refclk.clk
      .pll_0_reset_reset(~hps_fpga_reset_n),  //                pll_0_reset.reset
      //Pulse Generator
      .pulse_delay_pio_export(pulse_delay_pio_export),
      .pulse_width_pio_export(pulse_width_pio_export),
      .pulse_start_pio_export(pulse_start_pio_export),
      .pulse_repetition_pio_export(pulse_repetition_pio_export),
      // Reset
      .reset_reset_n(hps_fpga_reset_n),  //                      reset.reset_n
  );


endmodule
